{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"89bf8579941a1b5418efb93321cec22bf42af304","modified":1543646392814},{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1543646392815},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1543646392816},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1543646392816},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1543646392816},{"_id":"themes/landscape/_config.yml","hash":"1c5d49810af75de541b4a9edc26767dcb731d5bc","modified":1543646392816},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1543646392824},{"_id":"source/_posts/Black-screen-after-installing-Nvidia-drivers-on-Ubuntu-18-04-fix.md","hash":"eea5517461a6586d837e57d2411d6132d624cedf","modified":1543646392814},{"_id":"source/_posts/Demo-code-for-the-C-Programming-Language-Introduction.md","hash":"d1711c74b5c5f5130fe7803120f8b9fcd0d6aec1","modified":1543646392814},{"_id":"source/_posts/Project-Compozen-Build-Log-0.md","hash":"190e7f8adc8551e0cdd598a9358fcc17d423fc03","modified":1543838542342},{"_id":"source/_posts/hello-world.md","hash":"bf50cf7fdac7cd7a8c10c79fe29d45be7db1d50d","modified":1543646392814},{"_id":"source/about-me/index.md","hash":"0a7c5344be08c4ac36383e8f531cbe1703b5f7b1","modified":1543646392815},{"_id":"source/contact-me/index.md","hash":"e85e1ed75699df9d0c2980bf0fd825ae58ee6a76","modified":1543646392815},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1543646392816},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1543646392816},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1543646392817},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1543646392817},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1543646392817},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1543646392817},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1543646392817},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1543646392817},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1543646392818},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1543646392818},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1543646392818},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1543646392818},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1543646392823},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1543646392823},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1543646392823},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1543646392823},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1543646392823},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1543646392824},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1543646392824},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1543646392824},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1543646392819},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1543646392819},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1543646392819},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1543646392819},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1543646392819},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1543646392820},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1543646392820},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1543646392820},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1543646392820},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1543646392820},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1543646392822},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1543646392822},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1543646392822},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1543646392822},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1543646392822},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1543646392823},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1543646392824},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1543646392827},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1543646392833},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1543646392833},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1543646392834},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1543646392834},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1543646392834},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1543646392834},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1543646392834},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1543646392836},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1543646392837},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1543646392837},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1543646392837},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1543646392821},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1543646392821},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1543646392821},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1543646392821},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1543646392821},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1543646392821},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1543646392827},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1543646392827},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1543646392825},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1543646392825},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1543646392825},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1543646392825},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1543646392825},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1543646392826},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1543646392826},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1543646392826},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1543646392826},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1543646392826},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1543646392828},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1543646392828},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1543646392831},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1543646392835},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1543646392835},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1543646392835},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1543646392835},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1543646392836},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1543646392836},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1543646392830},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1543646392829},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1543646392833},{"_id":"public/about-me/index.html","hash":"c3fb2370cb5097057daef978fe6534cea6a43f70","modified":1543838801607},{"_id":"public/contact-me/index.html","hash":"c28c2cf104d5d472580a1dda21cc727d06318732","modified":1543838801607},{"_id":"public/2018/12/03/Project-Compozen-Build-Log-0/index.html","hash":"3ada27c7b6eedf7672f742962464c68dd30dc5db","modified":1543838801608},{"_id":"public/2018/10/22/Demo-code-for-the-C-Programming-Language-Introduction/index.html","hash":"987ad2fd5b3e097b76bb28cd4c5c11dcdaecce8c","modified":1543838801608},{"_id":"public/2018/09/27/hello-world/index.html","hash":"82a4c9fed730d7b9ab7be7dddc018b0f8ce60ee4","modified":1543838801608},{"_id":"public/archives/index.html","hash":"636ab46d1520383b228a0a0f63ca82ff86a7641a","modified":1543838801608},{"_id":"public/archives/2018/index.html","hash":"3ad3d355d4052b3f45c37cb8fdb5b60c104b2939","modified":1543838801608},{"_id":"public/archives/2018/09/index.html","hash":"2332ba0750944e2fd7761d4e60d9216a591ea59b","modified":1543838801608},{"_id":"public/archives/2018/10/index.html","hash":"3fa0272710c3d3ae0765f2afc50edc3f36b7005c","modified":1543838801608},{"_id":"public/archives/2018/12/index.html","hash":"a71c275d5727742b7f180dd0c4a9eeda806db0dd","modified":1543838801608},{"_id":"public/tags/nvidia/index.html","hash":"18bd8e8214aeae699d414075262eec6667c732cd","modified":1543838801608},{"_id":"public/tags/drivers/index.html","hash":"a79428d5117790bdfe863b82fe9c1afedbb264fd","modified":1543838801608},{"_id":"public/tags/ubuntu/index.html","hash":"c59b8a5e9346a3b0b9d691553159182a7743391f","modified":1543838801608},{"_id":"public/tags/18-04/index.html","hash":"632ebee0b7fe3f4b79ade5ce68e13ebd53e75b2f","modified":1543838801608},{"_id":"public/tags/grub/index.html","hash":"176792cd595cb68d58d55b63b9b8a5a745bf9972","modified":1543838801608},{"_id":"public/tags/node-js/index.html","hash":"98532e69a43871a53424cd91e34cd084948d2419","modified":1543838801608},{"_id":"public/tags/cli/index.html","hash":"51e09a199b6d6a421b7dfe1034a238736f2660cc","modified":1543838801608},{"_id":"public/tags/opensource/index.html","hash":"a05e86ed7bf4447183d48a4229c2e1c348bf69b8","modified":1543838801608},{"_id":"public/tags/docker/index.html","hash":"e8bcbb2faf992153c07b5cb37977097c7ecd7779","modified":1543838801609},{"_id":"public/tags/docker-compose/index.html","hash":"a2c3da9eb6180b31ab018a0b61c36ac803bb513d","modified":1543838801609},{"_id":"public/tags/c/index.html","hash":"ae9a7476f4aad2cd991b342af6bac5e124dee461","modified":1543838801609},{"_id":"public/tags/gcc/index.html","hash":"50169f1811a02f7a617152b627f8be68819c7388","modified":1543838801609},{"_id":"public/tags/compiler/index.html","hash":"11a7b87b068e697635d4a103d5d0a5621211e004","modified":1543838801609},{"_id":"public/2018/10/13/Black-screen-after-installing-Nvidia-drivers-on-Ubuntu-18-04-fix/index.html","hash":"48c9ecd5105f5f0494cc794096a55f81da7d5f69","modified":1543838801609},{"_id":"public/index.html","hash":"ae46570194991758ef2638ae9a76bad2b46348c2","modified":1543838801609},{"_id":"public/CNAME","hash":"89bf8579941a1b5418efb93321cec22bf42af304","modified":1543838801611},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1543838801612},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1543838801612},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1543838801612},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1543838801612},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1543838801612},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1543838801612},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1543838801612},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1543838801612},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1543838801612},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1543838801612},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1543838801918},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1543838801921},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1543838801921},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1543838801921},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1543838801921},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1543838801921},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1543838801921},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1543838801922},{"_id":"public/css/style.css","hash":"5f8dadd37d0052c557061018fe6f568f64fced9b","modified":1543838801922},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1543838801924},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1543838801926},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1543838801927},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1543838801931}],"Category":[],"Data":[],"Page":[{"title":"About me","date":"2018-09-27T11:55:27.000Z","_content":"\nHi, I'm Kasey! I'm a lot of things, and right now, I might be exactly what you need.\n\n### A Computer Scientist\nWith a Bachelor of Science in Computer Science from the University of the Philippines Baguio and a Masters of Information Systems from the University of the Philippines Open University, I am committed to creating only the most efficient solutions. A lot of my skills have been honed in parallel with what the University teaches. I believe that even though fundamentals are important, you owe it to yourself to grow and continually learn beyond what is being taught. So if you're a computer science student, or in any other course that has programming in it, then I'd love for you to read my content!\n\n### A Maker\nWhat is a maker? Well, a maker is an individual who loves to tinker to understand how things work. From that understanding, a maker will then try to \"Do It Yourself\" to replicate, innovate and improve on a particular device. From my background as a computer scientist and a computer technician(I've been building desktop computers since I was in grade school), I have the skills in order to understand how devices fundamentally work and create my own little projects from them!\n\n### A GIS Specialist\nGIS stands for Geographic Information Systems. These are information systems that help you create, manage and process spatial data. After a few months as a remote backend developer when I just graduated from my Computer Science degree, a professor of mine who I worked for as an Android Developer/Student Assistant called me to serve the country as a Science Research Specialist for the Phil-LiDAR 1 project. It was a Department of Science and Technology(DOST) funded project where we created high resolution flood hazard maps to give local government units. The maps gave them a more updated and accurate way of disaster risk reduction and management during typhoons. \n\nWhat particularly did I do? Well, to name a few, I was the system administrator for the laboratory infrastructure, handled a lot of process automations, made improvements on the GIS workflows and acted as both a software/hardware architect and  developer for our in house developed weather stations and apps.\n\n### A Drone Pilot\nAlso during my Phil-LiDAR 1 days, we purchased a DJI Inspire 1 drone, and there were 2 drone pilots! I was one of them, and my co-pilot was my very beautiful, smart, talented girlfriend Eloise <3 I also own my own quadcopter, a tiny but very nimble Hubsan X4!\n\n### An Entrepreneur\nAfter Phil-LiDAR 1, my very beautiful, smart, talented girlfriend Eloise and I established Hackspace Makerspace and Cafe! It is a hybrid between a makerspace and a cafe. At Hackspace you can rent out our electronics modules if you want to learn how to tinker or prototype your next electronics project! We also have 3d printers where you can make physical objects from your 3d models. Last but definitely not the least, we offer lovely delicious food that are cooked to perfection! Try it, I dare you :D \n","source":"about-me/index.md","raw":"---\ntitle: About me\ndate: 2018-09-27 19:55:27\n---\n\nHi, I'm Kasey! I'm a lot of things, and right now, I might be exactly what you need.\n\n### A Computer Scientist\nWith a Bachelor of Science in Computer Science from the University of the Philippines Baguio and a Masters of Information Systems from the University of the Philippines Open University, I am committed to creating only the most efficient solutions. A lot of my skills have been honed in parallel with what the University teaches. I believe that even though fundamentals are important, you owe it to yourself to grow and continually learn beyond what is being taught. So if you're a computer science student, or in any other course that has programming in it, then I'd love for you to read my content!\n\n### A Maker\nWhat is a maker? Well, a maker is an individual who loves to tinker to understand how things work. From that understanding, a maker will then try to \"Do It Yourself\" to replicate, innovate and improve on a particular device. From my background as a computer scientist and a computer technician(I've been building desktop computers since I was in grade school), I have the skills in order to understand how devices fundamentally work and create my own little projects from them!\n\n### A GIS Specialist\nGIS stands for Geographic Information Systems. These are information systems that help you create, manage and process spatial data. After a few months as a remote backend developer when I just graduated from my Computer Science degree, a professor of mine who I worked for as an Android Developer/Student Assistant called me to serve the country as a Science Research Specialist for the Phil-LiDAR 1 project. It was a Department of Science and Technology(DOST) funded project where we created high resolution flood hazard maps to give local government units. The maps gave them a more updated and accurate way of disaster risk reduction and management during typhoons. \n\nWhat particularly did I do? Well, to name a few, I was the system administrator for the laboratory infrastructure, handled a lot of process automations, made improvements on the GIS workflows and acted as both a software/hardware architect and  developer for our in house developed weather stations and apps.\n\n### A Drone Pilot\nAlso during my Phil-LiDAR 1 days, we purchased a DJI Inspire 1 drone, and there were 2 drone pilots! I was one of them, and my co-pilot was my very beautiful, smart, talented girlfriend Eloise <3 I also own my own quadcopter, a tiny but very nimble Hubsan X4!\n\n### An Entrepreneur\nAfter Phil-LiDAR 1, my very beautiful, smart, talented girlfriend Eloise and I established Hackspace Makerspace and Cafe! It is a hybrid between a makerspace and a cafe. At Hackspace you can rent out our electronics modules if you want to learn how to tinker or prototype your next electronics project! We also have 3d printers where you can make physical objects from your 3d models. Last but definitely not the least, we offer lovely delicious food that are cooked to perfection! Try it, I dare you :D \n","updated":"2018-12-01T06:39:52.815Z","path":"about-me/index.html","comments":1,"layout":"page","_id":"cjp89rez20001tlfojqwkz9uh","content":"<p>Hi, I&#x2019;m Kasey! I&#x2019;m a lot of things, and right now, I might be exactly what you need.</p>\n<h3 id=\"A-Computer-Scientist\"><a href=\"#A-Computer-Scientist\" class=\"headerlink\" title=\"A Computer Scientist\"></a>A Computer Scientist</h3><p>With a Bachelor of Science in Computer Science from the University of the Philippines Baguio and a Masters of Information Systems from the University of the Philippines Open University, I am committed to creating only the most efficient solutions. A lot of my skills have been honed in parallel with what the University teaches. I believe that even though fundamentals are important, you owe it to yourself to grow and continually learn beyond what is being taught. So if you&#x2019;re a computer science student, or in any other course that has programming in it, then I&#x2019;d love for you to read my content!</p>\n<h3 id=\"A-Maker\"><a href=\"#A-Maker\" class=\"headerlink\" title=\"A Maker\"></a>A Maker</h3><p>What is a maker? Well, a maker is an individual who loves to tinker to understand how things work. From that understanding, a maker will then try to &#x201C;Do It Yourself&#x201D; to replicate, innovate and improve on a particular device. From my background as a computer scientist and a computer technician(I&#x2019;ve been building desktop computers since I was in grade school), I have the skills in order to understand how devices fundamentally work and create my own little projects from them!</p>\n<h3 id=\"A-GIS-Specialist\"><a href=\"#A-GIS-Specialist\" class=\"headerlink\" title=\"A GIS Specialist\"></a>A GIS Specialist</h3><p>GIS stands for Geographic Information Systems. These are information systems that help you create, manage and process spatial data. After a few months as a remote backend developer when I just graduated from my Computer Science degree, a professor of mine who I worked for as an Android Developer/Student Assistant called me to serve the country as a Science Research Specialist for the Phil-LiDAR 1 project. It was a Department of Science and Technology(DOST) funded project where we created high resolution flood hazard maps to give local government units. The maps gave them a more updated and accurate way of disaster risk reduction and management during typhoons. </p>\n<p>What particularly did I do? Well, to name a few, I was the system administrator for the laboratory infrastructure, handled a lot of process automations, made improvements on the GIS workflows and acted as both a software/hardware architect and  developer for our in house developed weather stations and apps.</p>\n<h3 id=\"A-Drone-Pilot\"><a href=\"#A-Drone-Pilot\" class=\"headerlink\" title=\"A Drone Pilot\"></a>A Drone Pilot</h3><p>Also during my Phil-LiDAR 1 days, we purchased a DJI Inspire 1 drone, and there were 2 drone pilots! I was one of them, and my co-pilot was my very beautiful, smart, talented girlfriend Eloise &lt;3 I also own my own quadcopter, a tiny but very nimble Hubsan X4!</p>\n<h3 id=\"An-Entrepreneur\"><a href=\"#An-Entrepreneur\" class=\"headerlink\" title=\"An Entrepreneur\"></a>An Entrepreneur</h3><p>After Phil-LiDAR 1, my very beautiful, smart, talented girlfriend Eloise and I established Hackspace Makerspace and Cafe! It is a hybrid between a makerspace and a cafe. At Hackspace you can rent out our electronics modules if you want to learn how to tinker or prototype your next electronics project! We also have 3d printers where you can make physical objects from your 3d models. Last but definitely not the least, we offer lovely delicious food that are cooked to perfection! Try it, I dare you :D </p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"excerpt":"","more":"<p>Hi, I’m Kasey! I’m a lot of things, and right now, I might be exactly what you need.</p>\n<h3 id=\"A-Computer-Scientist\"><a href=\"#A-Computer-Scientist\" class=\"headerlink\" title=\"A Computer Scientist\"></a>A Computer Scientist</h3><p>With a Bachelor of Science in Computer Science from the University of the Philippines Baguio and a Masters of Information Systems from the University of the Philippines Open University, I am committed to creating only the most efficient solutions. A lot of my skills have been honed in parallel with what the University teaches. I believe that even though fundamentals are important, you owe it to yourself to grow and continually learn beyond what is being taught. So if you’re a computer science student, or in any other course that has programming in it, then I’d love for you to read my content!</p>\n<h3 id=\"A-Maker\"><a href=\"#A-Maker\" class=\"headerlink\" title=\"A Maker\"></a>A Maker</h3><p>What is a maker? Well, a maker is an individual who loves to tinker to understand how things work. From that understanding, a maker will then try to “Do It Yourself” to replicate, innovate and improve on a particular device. From my background as a computer scientist and a computer technician(I’ve been building desktop computers since I was in grade school), I have the skills in order to understand how devices fundamentally work and create my own little projects from them!</p>\n<h3 id=\"A-GIS-Specialist\"><a href=\"#A-GIS-Specialist\" class=\"headerlink\" title=\"A GIS Specialist\"></a>A GIS Specialist</h3><p>GIS stands for Geographic Information Systems. These are information systems that help you create, manage and process spatial data. After a few months as a remote backend developer when I just graduated from my Computer Science degree, a professor of mine who I worked for as an Android Developer/Student Assistant called me to serve the country as a Science Research Specialist for the Phil-LiDAR 1 project. It was a Department of Science and Technology(DOST) funded project where we created high resolution flood hazard maps to give local government units. The maps gave them a more updated and accurate way of disaster risk reduction and management during typhoons. </p>\n<p>What particularly did I do? Well, to name a few, I was the system administrator for the laboratory infrastructure, handled a lot of process automations, made improvements on the GIS workflows and acted as both a software/hardware architect and  developer for our in house developed weather stations and apps.</p>\n<h3 id=\"A-Drone-Pilot\"><a href=\"#A-Drone-Pilot\" class=\"headerlink\" title=\"A Drone Pilot\"></a>A Drone Pilot</h3><p>Also during my Phil-LiDAR 1 days, we purchased a DJI Inspire 1 drone, and there were 2 drone pilots! I was one of them, and my co-pilot was my very beautiful, smart, talented girlfriend Eloise &lt;3 I also own my own quadcopter, a tiny but very nimble Hubsan X4!</p>\n<h3 id=\"An-Entrepreneur\"><a href=\"#An-Entrepreneur\" class=\"headerlink\" title=\"An Entrepreneur\"></a>An Entrepreneur</h3><p>After Phil-LiDAR 1, my very beautiful, smart, talented girlfriend Eloise and I established Hackspace Makerspace and Cafe! It is a hybrid between a makerspace and a cafe. At Hackspace you can rent out our electronics modules if you want to learn how to tinker or prototype your next electronics project! We also have 3d printers where you can make physical objects from your 3d models. Last but definitely not the least, we offer lovely delicious food that are cooked to perfection! Try it, I dare you :D </p>\n"},{"title":"Contact me","date":"2018-09-27T11:55:37.000Z","_content":"Still under construction :p\n\nIf you have any inquries, or if you want to work with me (which is very fun), send me an email:\n\nkasey.hackspace@gmail.com","source":"contact-me/index.md","raw":"---\ntitle: Contact me\ndate: 2018-09-27 19:55:37\n---\nStill under construction :p\n\nIf you have any inquries, or if you want to work with me (which is very fun), send me an email:\n\nkasey.hackspace@gmail.com","updated":"2018-12-01T06:39:52.815Z","path":"contact-me/index.html","comments":1,"layout":"page","_id":"cjp89rez50003tlfoa2tlaudq","content":"<p>Still under construction :p</p>\n<p>If you have any inquries, or if you want to work with me (which is very fun), send me an email:</p>\n<p><a href=\"mailto:kasey.hackspace@gmail.com\" target=\"_blank\" rel=\"noopener\">kasey.hackspace@gmail.com</a></p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"excerpt":"","more":"<p>Still under construction :p</p>\n<p>If you have any inquries, or if you want to work with me (which is very fun), send me an email:</p>\n<p><a href=\"mailto:kasey.hackspace@gmail.com\" target=\"_blank\" rel=\"noopener\">kasey.hackspace@gmail.com</a></p>\n"}],"Post":[{"title":"Black screen after installing Nvidia drivers on Ubuntu 18.04 fix","date":"2018-10-13T14:26:34.000Z","_content":"\nI recently needed to reinstall Nvidia drivers as I performed a clean format to Ubuntu 18.04 after horribly crippling my system due to a failed `apt-get dist-upgrade`. Since I didn't have the time to be checking what the best driver version was for my graphics card, I went ahead and installed the drivers using the `sudo ubuntu-drivers autoinstall` command. Everything seemed ok, until I rebooted the system and was greeted with a black screen, and an unresponsive system.\n\nI did get to login to my system whenever I manually edited the grub configuration before booting up to change `quiet splash` to `nomodeset`. To make things more permanent, I did the following steps:\n\nEdit the `/etc/default/grub` file as root using `nano`:\n\n``` bash\n$ sudo nano /etc/default/grub\n```\n\nChange the line that has the `GRUB_CMDLINE_LINUX_DEFAULT` string from \n\n``` bash\nGRUB_CMDLINE_LINUX_DEFAULT=\"quiet splash\"\n```\n\nto \n``` bash\nGRUB_CMDLINE_LINUX_DEFAULT=\"nomodeset\"\n```\n\nMy default grub configuration now looks like this:\n\n``` bash\n# If you change this file, run 'update-grub' afterwards to update\n# /boot/grub/grub.cfg.\n# For full documentation of the options in this file, see:\n#   info -f grub -n 'Simple configuration'\n\nGRUB_DEFAULT=0\nGRUB_TIMEOUT_STYLE=hidden\nGRUB_TIMEOUT=10\nGRUB_DISTRIBUTOR=`lsb_release -i -s 2> /dev/null || echo Debian`\nGRUB_CMDLINE_LINUX_DEFAULT=\"nomodeset\"\nGRUB_CMDLINE_LINUX=\"\"\n\n# Uncomment to enable BadRAM filtering, modify to suit your needs\n# This works with Linux (no patch required) and with any kernel that obtains\n# the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)\n#GRUB_BADRAM=\"0x01234567,0xfefefefe,0x89abcdef,0xefefefef\"\n\n# Uncomment to disable graphical terminal (grub-pc only)\n#GRUB_TERMINAL=console\n\n# The resolution used on graphical terminal\n# note that you can use only modes which your graphic card supports via VBE\n# you can see them in real GRUB with the command `vbeinfo'\n#GRUB_GFXMODE=640x480\n\n# Uncomment if you don't want GRUB to pass \"root=UUID=xxx\" parameter to Linux\n#GRUB_DISABLE_LINUX_UUID=true\n\n# Uncomment to disable generation of recovery mode menu entries\n#GRUB_DISABLE_RECOVERY=\"true\"\n\n# Uncomment to get a beep at grub start\n#GRUB_INIT_TUNE=\"480 440 1\"\n```\n\nAfter saving that file (using `nano`, do a `Ctl+X` then press `Y`), go ahead and regenerate your grub file using the command\n\n``` bash\nsudo update grub\n```\n\nOnce you reboot, you should have the Ubuntu recommended stable Nvidia drivers working! I know it works because my Google Earth Pro now renders the globe perfectly and the system is now smooth with its transitions :)\n\nI hope this post helps a lot of people out, and see you guys in my next post!","source":"_posts/Black-screen-after-installing-Nvidia-drivers-on-Ubuntu-18-04-fix.md","raw":"---\ntitle: Black screen after installing Nvidia drivers on Ubuntu 18.04 fix\ndate: 2018-10-13 22:26:34\ntags: \n    - nvidia\n    - drivers\n    - ubuntu\n    - '18.04'\n    - grub\n---\n\nI recently needed to reinstall Nvidia drivers as I performed a clean format to Ubuntu 18.04 after horribly crippling my system due to a failed `apt-get dist-upgrade`. Since I didn't have the time to be checking what the best driver version was for my graphics card, I went ahead and installed the drivers using the `sudo ubuntu-drivers autoinstall` command. Everything seemed ok, until I rebooted the system and was greeted with a black screen, and an unresponsive system.\n\nI did get to login to my system whenever I manually edited the grub configuration before booting up to change `quiet splash` to `nomodeset`. To make things more permanent, I did the following steps:\n\nEdit the `/etc/default/grub` file as root using `nano`:\n\n``` bash\n$ sudo nano /etc/default/grub\n```\n\nChange the line that has the `GRUB_CMDLINE_LINUX_DEFAULT` string from \n\n``` bash\nGRUB_CMDLINE_LINUX_DEFAULT=\"quiet splash\"\n```\n\nto \n``` bash\nGRUB_CMDLINE_LINUX_DEFAULT=\"nomodeset\"\n```\n\nMy default grub configuration now looks like this:\n\n``` bash\n# If you change this file, run 'update-grub' afterwards to update\n# /boot/grub/grub.cfg.\n# For full documentation of the options in this file, see:\n#   info -f grub -n 'Simple configuration'\n\nGRUB_DEFAULT=0\nGRUB_TIMEOUT_STYLE=hidden\nGRUB_TIMEOUT=10\nGRUB_DISTRIBUTOR=`lsb_release -i -s 2> /dev/null || echo Debian`\nGRUB_CMDLINE_LINUX_DEFAULT=\"nomodeset\"\nGRUB_CMDLINE_LINUX=\"\"\n\n# Uncomment to enable BadRAM filtering, modify to suit your needs\n# This works with Linux (no patch required) and with any kernel that obtains\n# the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)\n#GRUB_BADRAM=\"0x01234567,0xfefefefe,0x89abcdef,0xefefefef\"\n\n# Uncomment to disable graphical terminal (grub-pc only)\n#GRUB_TERMINAL=console\n\n# The resolution used on graphical terminal\n# note that you can use only modes which your graphic card supports via VBE\n# you can see them in real GRUB with the command `vbeinfo'\n#GRUB_GFXMODE=640x480\n\n# Uncomment if you don't want GRUB to pass \"root=UUID=xxx\" parameter to Linux\n#GRUB_DISABLE_LINUX_UUID=true\n\n# Uncomment to disable generation of recovery mode menu entries\n#GRUB_DISABLE_RECOVERY=\"true\"\n\n# Uncomment to get a beep at grub start\n#GRUB_INIT_TUNE=\"480 440 1\"\n```\n\nAfter saving that file (using `nano`, do a `Ctl+X` then press `Y`), go ahead and regenerate your grub file using the command\n\n``` bash\nsudo update grub\n```\n\nOnce you reboot, you should have the Ubuntu recommended stable Nvidia drivers working! I know it works because my Google Earth Pro now renders the globe perfectly and the system is now smooth with its transitions :)\n\nI hope this post helps a lot of people out, and see you guys in my next post!","slug":"Black-screen-after-installing-Nvidia-drivers-on-Ubuntu-18-04-fix","published":1,"updated":"2018-12-01T06:39:52.814Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjp89reyx0000tlfo8zcl9aoc","content":"<p>I recently needed to reinstall Nvidia drivers as I performed a clean format to Ubuntu 18.04 after horribly crippling my system due to a failed <code>apt-get dist-upgrade</code>. Since I didn&#x2019;t have the time to be checking what the best driver version was for my graphics card, I went ahead and installed the drivers using the <code>sudo ubuntu-drivers autoinstall</code> command. Everything seemed ok, until I rebooted the system and was greeted with a black screen, and an unresponsive system.</p>\n<p>I did get to login to my system whenever I manually edited the grub configuration before booting up to change <code>quiet splash</code> to <code>nomodeset</code>. To make things more permanent, I did the following steps:</p>\n<p>Edit the <code>/etc/default/grub</code> file as root using <code>nano</code>:</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo nano /etc/default/grub</span><br></pre></td></tr></tbody></table></figure>\n<p>Change the line that has the <code>GRUB_CMDLINE_LINUX_DEFAULT</code> string from </p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRUB_CMDLINE_LINUX_DEFAULT=<span class=\"string\">&quot;quiet splash&quot;</span></span><br></pre></td></tr></tbody></table></figure>\n<p>to<br></p><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRUB_CMDLINE_LINUX_DEFAULT=<span class=\"string\">&quot;nomodeset&quot;</span></span><br></pre></td></tr></tbody></table></figure><p></p>\n<p>My default grub configuration now looks like this:</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># If you change this file, run &apos;update-grub&apos; afterwards to update</span></span><br><span class=\"line\"><span class=\"comment\"># /boot/grub/grub.cfg.</span></span><br><span class=\"line\"><span class=\"comment\"># For full documentation of the options in this file, see:</span></span><br><span class=\"line\"><span class=\"comment\">#   info -f grub -n &apos;Simple configuration&apos;</span></span><br><span class=\"line\"></span><br><span class=\"line\">GRUB_DEFAULT=0</span><br><span class=\"line\">GRUB_TIMEOUT_STYLE=hidden</span><br><span class=\"line\">GRUB_TIMEOUT=10</span><br><span class=\"line\">GRUB_DISTRIBUTOR=`lsb_release -i -s 2&gt; /dev/null || <span class=\"built_in\">echo</span> Debian`</span><br><span class=\"line\">GRUB_CMDLINE_LINUX_DEFAULT=<span class=\"string\">&quot;nomodeset&quot;</span></span><br><span class=\"line\">GRUB_CMDLINE_LINUX=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Uncomment to enable BadRAM filtering, modify to suit your needs</span></span><br><span class=\"line\"><span class=\"comment\"># This works with Linux (no patch required) and with any kernel that obtains</span></span><br><span class=\"line\"><span class=\"comment\"># the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)</span></span><br><span class=\"line\"><span class=\"comment\">#GRUB_BADRAM=&quot;0x01234567,0xfefefefe,0x89abcdef,0xefefefef&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Uncomment to disable graphical terminal (grub-pc only)</span></span><br><span class=\"line\"><span class=\"comment\">#GRUB_TERMINAL=console</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The resolution used on graphical terminal</span></span><br><span class=\"line\"><span class=\"comment\"># note that you can use only modes which your graphic card supports via VBE</span></span><br><span class=\"line\"><span class=\"comment\"># you can see them in real GRUB with the command `vbeinfo&apos;</span></span><br><span class=\"line\"><span class=\"comment\">#GRUB_GFXMODE=640x480</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Uncomment if you don&apos;t want GRUB to pass &quot;root=UUID=xxx&quot; parameter to Linux</span></span><br><span class=\"line\"><span class=\"comment\">#GRUB_DISABLE_LINUX_UUID=true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Uncomment to disable generation of recovery mode menu entries</span></span><br><span class=\"line\"><span class=\"comment\">#GRUB_DISABLE_RECOVERY=&quot;true&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Uncomment to get a beep at grub start</span></span><br><span class=\"line\"><span class=\"comment\">#GRUB_INIT_TUNE=&quot;480 440 1&quot;</span></span><br></pre></td></tr></tbody></table></figure>\n<p>After saving that file (using <code>nano</code>, do a <code>Ctl+X</code> then press <code>Y</code>), go ahead and regenerate your grub file using the command</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update grub</span><br></pre></td></tr></tbody></table></figure>\n<p>Once you reboot, you should have the Ubuntu recommended stable Nvidia drivers working! I know it works because my Google Earth Pro now renders the globe perfectly and the system is now smooth with its transitions :)</p>\n<p>I hope this post helps a lot of people out, and see you guys in my next post!</p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"excerpt":"","more":"<p>I recently needed to reinstall Nvidia drivers as I performed a clean format to Ubuntu 18.04 after horribly crippling my system due to a failed <code>apt-get dist-upgrade</code>. Since I didn’t have the time to be checking what the best driver version was for my graphics card, I went ahead and installed the drivers using the <code>sudo ubuntu-drivers autoinstall</code> command. Everything seemed ok, until I rebooted the system and was greeted with a black screen, and an unresponsive system.</p>\n<p>I did get to login to my system whenever I manually edited the grub configuration before booting up to change <code>quiet splash</code> to <code>nomodeset</code>. To make things more permanent, I did the following steps:</p>\n<p>Edit the <code>/etc/default/grub</code> file as root using <code>nano</code>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo nano /etc/default/grub</span><br></pre></td></tr></table></figure>\n<p>Change the line that has the <code>GRUB_CMDLINE_LINUX_DEFAULT</code> string from </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRUB_CMDLINE_LINUX_DEFAULT=<span class=\"string\">\"quiet splash\"</span></span><br></pre></td></tr></table></figure>\n<p>to<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRUB_CMDLINE_LINUX_DEFAULT=<span class=\"string\">\"nomodeset\"</span></span><br></pre></td></tr></table></figure></p>\n<p>My default grub configuration now looks like this:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># If you change this file, run 'update-grub' afterwards to update</span></span><br><span class=\"line\"><span class=\"comment\"># /boot/grub/grub.cfg.</span></span><br><span class=\"line\"><span class=\"comment\"># For full documentation of the options in this file, see:</span></span><br><span class=\"line\"><span class=\"comment\">#   info -f grub -n 'Simple configuration'</span></span><br><span class=\"line\"></span><br><span class=\"line\">GRUB_DEFAULT=0</span><br><span class=\"line\">GRUB_TIMEOUT_STYLE=hidden</span><br><span class=\"line\">GRUB_TIMEOUT=10</span><br><span class=\"line\">GRUB_DISTRIBUTOR=`lsb_release -i -s 2&gt; /dev/null || <span class=\"built_in\">echo</span> Debian`</span><br><span class=\"line\">GRUB_CMDLINE_LINUX_DEFAULT=<span class=\"string\">\"nomodeset\"</span></span><br><span class=\"line\">GRUB_CMDLINE_LINUX=<span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Uncomment to enable BadRAM filtering, modify to suit your needs</span></span><br><span class=\"line\"><span class=\"comment\"># This works with Linux (no patch required) and with any kernel that obtains</span></span><br><span class=\"line\"><span class=\"comment\"># the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)</span></span><br><span class=\"line\"><span class=\"comment\">#GRUB_BADRAM=\"0x01234567,0xfefefefe,0x89abcdef,0xefefefef\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Uncomment to disable graphical terminal (grub-pc only)</span></span><br><span class=\"line\"><span class=\"comment\">#GRUB_TERMINAL=console</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The resolution used on graphical terminal</span></span><br><span class=\"line\"><span class=\"comment\"># note that you can use only modes which your graphic card supports via VBE</span></span><br><span class=\"line\"><span class=\"comment\"># you can see them in real GRUB with the command `vbeinfo'</span></span><br><span class=\"line\"><span class=\"comment\">#GRUB_GFXMODE=640x480</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Uncomment if you don't want GRUB to pass \"root=UUID=xxx\" parameter to Linux</span></span><br><span class=\"line\"><span class=\"comment\">#GRUB_DISABLE_LINUX_UUID=true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Uncomment to disable generation of recovery mode menu entries</span></span><br><span class=\"line\"><span class=\"comment\">#GRUB_DISABLE_RECOVERY=\"true\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Uncomment to get a beep at grub start</span></span><br><span class=\"line\"><span class=\"comment\">#GRUB_INIT_TUNE=\"480 440 1\"</span></span><br></pre></td></tr></table></figure>\n<p>After saving that file (using <code>nano</code>, do a <code>Ctl+X</code> then press <code>Y</code>), go ahead and regenerate your grub file using the command</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update grub</span><br></pre></td></tr></table></figure>\n<p>Once you reboot, you should have the Ubuntu recommended stable Nvidia drivers working! I know it works because my Google Earth Pro now renders the globe perfectly and the system is now smooth with its transitions :)</p>\n<p>I hope this post helps a lot of people out, and see you guys in my next post!</p>\n"},{"title":"Project Compozen: Build Log 0","date":"2018-12-03T11:10:25.000Z","_content":"\nI've always been a `Python` guy and I've been putting off learning `Node.js` for so long, and I didn't even know the fundamentals of `Node.js`. Part of the reason was I couldn't get it off my head that `javascript` was primarily used for client side browser scripting. But the thing is, `Node.js` enabled `javascript` to run on the server-side. But what really reeled me in is the `Node.js` was built using Chrome's V8 Javascript engine, which makes it really, really, fast. I love fast programs, and if you've known me in college, I was obsessed with making my programs fast and efficient. Hence my love for `C`, `C++`, assembly languages, parallel, distributed and GPU computing :)\n\nMy first opensource project in `Node.js` will be `Compozen`! What is `Compozen`? `Compozen` will be a CLI tool for generating and managing `docker-compose` YAML files! These files are used by `docker-compose` a tool used `Docker` to spin up of micro-services that work together in order to make modern applications using Docker work. \n\nWhy do I want to create `Compozen`? Well, I want to introduce it to the Continous Integration and Continous Delivery pipeline I'm building for the awesome clients I work for and I want to use it for my future projects. Hopefully, you guys can use it too when the time comes for you to build your own awesome ideas {% github_emoji grin %}\n\nHere's the repository for it : https://github.com/kaseyhackspace/compozen\n\nI'll keep you guys updated about `Compozen` using these Build Logs reguarly to keep myself in check.","source":"_posts/Project-Compozen-Build-Log-0.md","raw":"---\ntitle: 'Project Compozen: Build Log 0'\ndate: 2018-12-03 19:10:25\ntags:\n    - node.js\n    - cli\n    - opensource\n    - docker\n    - docker-compose\n---\n\nI've always been a `Python` guy and I've been putting off learning `Node.js` for so long, and I didn't even know the fundamentals of `Node.js`. Part of the reason was I couldn't get it off my head that `javascript` was primarily used for client side browser scripting. But the thing is, `Node.js` enabled `javascript` to run on the server-side. But what really reeled me in is the `Node.js` was built using Chrome's V8 Javascript engine, which makes it really, really, fast. I love fast programs, and if you've known me in college, I was obsessed with making my programs fast and efficient. Hence my love for `C`, `C++`, assembly languages, parallel, distributed and GPU computing :)\n\nMy first opensource project in `Node.js` will be `Compozen`! What is `Compozen`? `Compozen` will be a CLI tool for generating and managing `docker-compose` YAML files! These files are used by `docker-compose` a tool used `Docker` to spin up of micro-services that work together in order to make modern applications using Docker work. \n\nWhy do I want to create `Compozen`? Well, I want to introduce it to the Continous Integration and Continous Delivery pipeline I'm building for the awesome clients I work for and I want to use it for my future projects. Hopefully, you guys can use it too when the time comes for you to build your own awesome ideas {% github_emoji grin %}\n\nHere's the repository for it : https://github.com/kaseyhackspace/compozen\n\nI'll keep you guys updated about `Compozen` using these Build Logs reguarly to keep myself in check.","slug":"Project-Compozen-Build-Log-0","published":1,"updated":"2018-12-03T12:02:22.342Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjp89rez30002tlfo8t29p3lv","content":"<p>I&#x2019;ve always been a <code>Python</code> guy and I&#x2019;ve been putting off learning <code>Node.js</code> for so long, and I didn&#x2019;t even know the fundamentals of <code>Node.js</code>. Part of the reason was I couldn&#x2019;t get it off my head that <code>javascript</code> was primarily used for client side browser scripting. But the thing is, <code>Node.js</code> enabled <code>javascript</code> to run on the server-side. But what really reeled me in is the <code>Node.js</code> was built using Chrome&#x2019;s V8 Javascript engine, which makes it really, really, fast. I love fast programs, and if you&#x2019;ve known me in college, I was obsessed with making my programs fast and efficient. Hence my love for <code>C</code>, <code>C++</code>, assembly languages, parallel, distributed and GPU computing :)</p>\n<p>My first opensource project in <code>Node.js</code> will be <code>Compozen</code>! What is <code>Compozen</code>? <code>Compozen</code> will be a CLI tool for generating and managing <code>docker-compose</code> YAML files! These files are used by <code>docker-compose</code> a tool used <code>Docker</code> to spin up of micro-services that work together in order to make modern applications using Docker work. </p>\n<p>Why do I want to create <code>Compozen</code>? Well, I want to introduce it to the Continous Integration and Continous Delivery pipeline I&#x2019;m building for the awesome clients I work for and I want to use it for my future projects. Hopefully, you guys can use it too when the time comes for you to build your own awesome ideas <span class=\"github-emoji\" style=\"color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f601.png?v8) center/contain\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f601.png?v8\">&#x1F601;</span></p>\n<p>Here&#x2019;s the repository for it : <a href=\"https://github.com/kaseyhackspace/compozen\" target=\"_blank\" rel=\"noopener\">https://github.com/kaseyhackspace/compozen</a></p>\n<p>I&#x2019;ll keep you guys updated about <code>Compozen</code> using these Build Logs reguarly to keep myself in check.</p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"excerpt":"","more":"<p>I’ve always been a <code>Python</code> guy and I’ve been putting off learning <code>Node.js</code> for so long, and I didn’t even know the fundamentals of <code>Node.js</code>. Part of the reason was I couldn’t get it off my head that <code>javascript</code> was primarily used for client side browser scripting. But the thing is, <code>Node.js</code> enabled <code>javascript</code> to run on the server-side. But what really reeled me in is the <code>Node.js</code> was built using Chrome’s V8 Javascript engine, which makes it really, really, fast. I love fast programs, and if you’ve known me in college, I was obsessed with making my programs fast and efficient. Hence my love for <code>C</code>, <code>C++</code>, assembly languages, parallel, distributed and GPU computing :)</p>\n<p>My first opensource project in <code>Node.js</code> will be <code>Compozen</code>! What is <code>Compozen</code>? <code>Compozen</code> will be a CLI tool for generating and managing <code>docker-compose</code> YAML files! These files are used by <code>docker-compose</code> a tool used <code>Docker</code> to spin up of micro-services that work together in order to make modern applications using Docker work. </p>\n<p>Why do I want to create <code>Compozen</code>? Well, I want to introduce it to the Continous Integration and Continous Delivery pipeline I’m building for the awesome clients I work for and I want to use it for my future projects. Hopefully, you guys can use it too when the time comes for you to build your own awesome ideas <span class=\"github-emoji\" style=\"color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f601.png?v8) center/contain\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f601.png?v8\">&#x1f601;</span></p>\n<p>Here’s the repository for it : <a href=\"https://github.com/kaseyhackspace/compozen\" target=\"_blank\" rel=\"noopener\">https://github.com/kaseyhackspace/compozen</a></p>\n<p>I’ll keep you guys updated about <code>Compozen</code> using these Build Logs reguarly to keep myself in check.</p>\n"},{"title":"Hello World","date":"2018-09-27T13:00:00.000Z","_content":"**Hello World!** If you've done any programming, this sentence is all too familliar to you :). I'm Kasey, and this is the latest of my attempts to start a blog. I started a few along the years, but I keep on forgetting to add to it after the first post. Hopefully this time around, it takes a different turn and I end up posting regularly!\n\n## What will this blog be about?\n\nWell, this blog is going to be about a _LOT_ of stuff! I am thinking mainly about _Computer Science_ topics, but I'll also do posts about life, health, travel, and a lot of meaningful stuff! I'll be spending quality time writing these blogs to hopefully provide good insight to my readers :)\n\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2018-09-27 21:00:00\n---\n**Hello World!** If you've done any programming, this sentence is all too familliar to you :). I'm Kasey, and this is the latest of my attempts to start a blog. I started a few along the years, but I keep on forgetting to add to it after the first post. Hopefully this time around, it takes a different turn and I end up posting regularly!\n\n## What will this blog be about?\n\nWell, this blog is going to be about a _LOT_ of stuff! I am thinking mainly about _Computer Science_ topics, but I'll also do posts about life, health, travel, and a lot of meaningful stuff! I'll be spending quality time writing these blogs to hopefully provide good insight to my readers :)\n\n","slug":"hello-world","published":1,"updated":"2018-12-01T06:39:52.814Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjp89rez70005tlfoxlwkg9gj","content":"<p><strong>Hello World!</strong> If you&#x2019;ve done any programming, this sentence is all too familliar to you :). I&#x2019;m Kasey, and this is the latest of my attempts to start a blog. I started a few along the years, but I keep on forgetting to add to it after the first post. Hopefully this time around, it takes a different turn and I end up posting regularly!</p>\n<h2 id=\"What-will-this-blog-be-about\"><a href=\"#What-will-this-blog-be-about\" class=\"headerlink\" title=\"What will this blog be about?\"></a>What will this blog be about?</h2><p>Well, this blog is going to be about a <em>LOT</em> of stuff! I am thinking mainly about <em>Computer Science</em> topics, but I&#x2019;ll also do posts about life, health, travel, and a lot of meaningful stuff! I&#x2019;ll be spending quality time writing these blogs to hopefully provide good insight to my readers :)</p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"excerpt":"","more":"<p><strong>Hello World!</strong> If you’ve done any programming, this sentence is all too familliar to you :). I’m Kasey, and this is the latest of my attempts to start a blog. I started a few along the years, but I keep on forgetting to add to it after the first post. Hopefully this time around, it takes a different turn and I end up posting regularly!</p>\n<h2 id=\"What-will-this-blog-be-about\"><a href=\"#What-will-this-blog-be-about\" class=\"headerlink\" title=\"What will this blog be about?\"></a>What will this blog be about?</h2><p>Well, this blog is going to be about a <em>LOT</em> of stuff! I am thinking mainly about <em>Computer Science</em> topics, but I’ll also do posts about life, health, travel, and a lot of meaningful stuff! I’ll be spending quality time writing these blogs to hopefully provide good insight to my readers :)</p>\n"},{"title":"Demo code for the C Programming Language Introduction","date":"2018-10-22T07:17:34.000Z","_content":"Last week we conducted a basic C Programming workshop in collaboration with [Mechatronics SLU](https://www.facebook.com/MechatronicsSLU) at Saint Louis University, Baguio! It was a cool experience, and I really wanted to make sure that the students really understood the concepts we taught. After the session, we promised them that we would upload all the demo code we made for them to study and practise on :)\n\nHere's the main repository:\nhttps://github.com/kaseyhackspace/c_demo\n\nIf you don't know how to use `git` and github.com, don't worry, I'll make a post about that one of these days when I get the time!\n\nIn the meantime, here are links per chapter/topic so that you guys don't have to learn git right away :). Once you are redirected to the branch, go ahead and click on `main.c` in order to view the source code for that topic.\n\n1.  [Command line arguments](https://github.com/kaseyhackspace/c_demo/tree/1_cmd_line_arguments)\n2. [Input Output](https://github.com/kaseyhackspace/c_demo/tree/2_input_output)\n3. [Arithmetic and Conditional Operators](https://github.com/kaseyhackspace/c_demo/tree/3_operators)\n4. [Conditional Statements](https://github.com/kaseyhackspace/c_demo/tree/4_conditional)\n5. [The Switch Statement](https://github.com/kaseyhackspace/c_demo/tree/5_switch)\n6. [Loops](https://github.com/kaseyhackspace/c_demo/tree/6_loops)\n7. [Functions](https://github.com/kaseyhackspace/c_demo/tree/7_functions)\n\nThere you have it, all the source code for last week's C programming workshop! Stay tuned as I'll be discussing each source code in detail in the days to come :)","source":"_posts/Demo-code-for-the-C-Programming-Language-Introduction.md","raw":"---\ntitle: Demo code for the C Programming Language Introduction\ndate: 2018-10-22 15:17:34\ntags: \n    - c \n    - c++\n    - gcc\n    - compiler\n---\nLast week we conducted a basic C Programming workshop in collaboration with [Mechatronics SLU](https://www.facebook.com/MechatronicsSLU) at Saint Louis University, Baguio! It was a cool experience, and I really wanted to make sure that the students really understood the concepts we taught. After the session, we promised them that we would upload all the demo code we made for them to study and practise on :)\n\nHere's the main repository:\nhttps://github.com/kaseyhackspace/c_demo\n\nIf you don't know how to use `git` and github.com, don't worry, I'll make a post about that one of these days when I get the time!\n\nIn the meantime, here are links per chapter/topic so that you guys don't have to learn git right away :). Once you are redirected to the branch, go ahead and click on `main.c` in order to view the source code for that topic.\n\n1.  [Command line arguments](https://github.com/kaseyhackspace/c_demo/tree/1_cmd_line_arguments)\n2. [Input Output](https://github.com/kaseyhackspace/c_demo/tree/2_input_output)\n3. [Arithmetic and Conditional Operators](https://github.com/kaseyhackspace/c_demo/tree/3_operators)\n4. [Conditional Statements](https://github.com/kaseyhackspace/c_demo/tree/4_conditional)\n5. [The Switch Statement](https://github.com/kaseyhackspace/c_demo/tree/5_switch)\n6. [Loops](https://github.com/kaseyhackspace/c_demo/tree/6_loops)\n7. [Functions](https://github.com/kaseyhackspace/c_demo/tree/7_functions)\n\nThere you have it, all the source code for last week's C programming workshop! Stay tuned as I'll be discussing each source code in detail in the days to come :)","slug":"Demo-code-for-the-C-Programming-Language-Introduction","published":1,"updated":"2018-12-01T06:39:52.814Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjp89rez90006tlfo0jwv45ld","content":"<p>Last week we conducted a basic C Programming workshop in collaboration with <a href=\"https://www.facebook.com/MechatronicsSLU\" target=\"_blank\" rel=\"noopener\">Mechatronics SLU</a> at Saint Louis University, Baguio! It was a cool experience, and I really wanted to make sure that the students really understood the concepts we taught. After the session, we promised them that we would upload all the demo code we made for them to study and practise on :)</p>\n<p>Here&#x2019;s the main repository:<br><a href=\"https://github.com/kaseyhackspace/c_demo\" target=\"_blank\" rel=\"noopener\">https://github.com/kaseyhackspace/c_demo</a></p>\n<p>If you don&#x2019;t know how to use <code>git</code> and github.com, don&#x2019;t worry, I&#x2019;ll make a post about that one of these days when I get the time!</p>\n<p>In the meantime, here are links per chapter/topic so that you guys don&#x2019;t have to learn git right away :). Once you are redirected to the branch, go ahead and click on <code>main.c</code> in order to view the source code for that topic.</p>\n<ol>\n<li><a href=\"https://github.com/kaseyhackspace/c_demo/tree/1_cmd_line_arguments\" target=\"_blank\" rel=\"noopener\">Command line arguments</a></li>\n<li><a href=\"https://github.com/kaseyhackspace/c_demo/tree/2_input_output\" target=\"_blank\" rel=\"noopener\">Input Output</a></li>\n<li><a href=\"https://github.com/kaseyhackspace/c_demo/tree/3_operators\" target=\"_blank\" rel=\"noopener\">Arithmetic and Conditional Operators</a></li>\n<li><a href=\"https://github.com/kaseyhackspace/c_demo/tree/4_conditional\" target=\"_blank\" rel=\"noopener\">Conditional Statements</a></li>\n<li><a href=\"https://github.com/kaseyhackspace/c_demo/tree/5_switch\" target=\"_blank\" rel=\"noopener\">The Switch Statement</a></li>\n<li><a href=\"https://github.com/kaseyhackspace/c_demo/tree/6_loops\" target=\"_blank\" rel=\"noopener\">Loops</a></li>\n<li><a href=\"https://github.com/kaseyhackspace/c_demo/tree/7_functions\" target=\"_blank\" rel=\"noopener\">Functions</a></li>\n</ol>\n<p>There you have it, all the source code for last week&#x2019;s C programming workshop! Stay tuned as I&#x2019;ll be discussing each source code in detail in the days to come :)</p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"excerpt":"","more":"<p>Last week we conducted a basic C Programming workshop in collaboration with <a href=\"https://www.facebook.com/MechatronicsSLU\" target=\"_blank\" rel=\"noopener\">Mechatronics SLU</a> at Saint Louis University, Baguio! It was a cool experience, and I really wanted to make sure that the students really understood the concepts we taught. After the session, we promised them that we would upload all the demo code we made for them to study and practise on :)</p>\n<p>Here’s the main repository:<br><a href=\"https://github.com/kaseyhackspace/c_demo\" target=\"_blank\" rel=\"noopener\">https://github.com/kaseyhackspace/c_demo</a></p>\n<p>If you don’t know how to use <code>git</code> and github.com, don’t worry, I’ll make a post about that one of these days when I get the time!</p>\n<p>In the meantime, here are links per chapter/topic so that you guys don’t have to learn git right away :). Once you are redirected to the branch, go ahead and click on <code>main.c</code> in order to view the source code for that topic.</p>\n<ol>\n<li><a href=\"https://github.com/kaseyhackspace/c_demo/tree/1_cmd_line_arguments\" target=\"_blank\" rel=\"noopener\">Command line arguments</a></li>\n<li><a href=\"https://github.com/kaseyhackspace/c_demo/tree/2_input_output\" target=\"_blank\" rel=\"noopener\">Input Output</a></li>\n<li><a href=\"https://github.com/kaseyhackspace/c_demo/tree/3_operators\" target=\"_blank\" rel=\"noopener\">Arithmetic and Conditional Operators</a></li>\n<li><a href=\"https://github.com/kaseyhackspace/c_demo/tree/4_conditional\" target=\"_blank\" rel=\"noopener\">Conditional Statements</a></li>\n<li><a href=\"https://github.com/kaseyhackspace/c_demo/tree/5_switch\" target=\"_blank\" rel=\"noopener\">The Switch Statement</a></li>\n<li><a href=\"https://github.com/kaseyhackspace/c_demo/tree/6_loops\" target=\"_blank\" rel=\"noopener\">Loops</a></li>\n<li><a href=\"https://github.com/kaseyhackspace/c_demo/tree/7_functions\" target=\"_blank\" rel=\"noopener\">Functions</a></li>\n</ol>\n<p>There you have it, all the source code for last week’s C programming workshop! Stay tuned as I’ll be discussing each source code in detail in the days to come :)</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjp89reyx0000tlfo8zcl9aoc","tag_id":"cjp89rez60004tlfous7v9vzt","_id":"cjp89rezc000ctlfoegxtea43"},{"post_id":"cjp89reyx0000tlfo8zcl9aoc","tag_id":"cjp89reza0007tlfowrrp209w","_id":"cjp89rezc000dtlfoioobhn3g"},{"post_id":"cjp89reyx0000tlfo8zcl9aoc","tag_id":"cjp89rezb0008tlfod61ym5hp","_id":"cjp89rezc000ftlfo5o3olkzs"},{"post_id":"cjp89reyx0000tlfo8zcl9aoc","tag_id":"cjp89rezb0009tlfoknrbpjc7","_id":"cjp89rezc000gtlfo2k9d0dhl"},{"post_id":"cjp89reyx0000tlfo8zcl9aoc","tag_id":"cjp89rezb000atlfooxecxb64","_id":"cjp89rezc000itlfo1mtjisq6"},{"post_id":"cjp89rez30002tlfo8t29p3lv","tag_id":"cjp89rezb000btlfo2p4oy8t1","_id":"cjp89reze000mtlfopqrddvcj"},{"post_id":"cjp89rez30002tlfo8t29p3lv","tag_id":"cjp89rezc000etlfo9b7km8yv","_id":"cjp89reze000ntlfo7wt6fe9x"},{"post_id":"cjp89rez30002tlfo8t29p3lv","tag_id":"cjp89rezc000htlfoely1s2fa","_id":"cjp89reze000ptlfoybcw78ve"},{"post_id":"cjp89rez30002tlfo8t29p3lv","tag_id":"cjp89rezd000jtlfozu8viwif","_id":"cjp89reze000qtlfowouzz7si"},{"post_id":"cjp89rez30002tlfo8t29p3lv","tag_id":"cjp89reze000ktlfof056wwy1","_id":"cjp89rezf000stlfoy6a7vcaq"},{"post_id":"cjp89rez90006tlfo0jwv45ld","tag_id":"cjp89reze000ltlfovov8loyo","_id":"cjp89rezf000utlfoosarkj4r"},{"post_id":"cjp89rez90006tlfo0jwv45ld","tag_id":"cjp89reze000otlfosiwka2m0","_id":"cjp89rezf000vtlfodxg82y8y"},{"post_id":"cjp89rez90006tlfo0jwv45ld","tag_id":"cjp89reze000rtlfo7qb5iahp","_id":"cjp89rezf000wtlfow6ju58f1"},{"post_id":"cjp89rez90006tlfo0jwv45ld","tag_id":"cjp89rezf000ttlfo5zumpfwy","_id":"cjp89rezf000xtlfoqvelnbqk"}],"Tag":[{"name":"nvidia","_id":"cjp89rez60004tlfous7v9vzt"},{"name":"drivers","_id":"cjp89reza0007tlfowrrp209w"},{"name":"ubuntu","_id":"cjp89rezb0008tlfod61ym5hp"},{"name":"18.04","_id":"cjp89rezb0009tlfoknrbpjc7"},{"name":"grub","_id":"cjp89rezb000atlfooxecxb64"},{"name":"node.js","_id":"cjp89rezb000btlfo2p4oy8t1"},{"name":"cli","_id":"cjp89rezc000etlfo9b7km8yv"},{"name":"opensource","_id":"cjp89rezc000htlfoely1s2fa"},{"name":"docker","_id":"cjp89rezd000jtlfozu8viwif"},{"name":"docker-compose","_id":"cjp89reze000ktlfof056wwy1"},{"name":"c","_id":"cjp89reze000ltlfovov8loyo"},{"name":"c++","_id":"cjp89reze000otlfosiwka2m0"},{"name":"gcc","_id":"cjp89reze000rtlfo7qb5iahp"},{"name":"compiler","_id":"cjp89rezf000ttlfo5zumpfwy"}]}}